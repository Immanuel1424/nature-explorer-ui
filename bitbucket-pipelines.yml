image: node:18

pipelines:
  branches:
    main:
      - step:
          name: "Build & Upload to S3"
          script:
            # Install AWS CLI and rsync
            - apt-get update && apt-get install -y unzip rsync curl
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            - aws --version

            # Build project
            - npm ci
            - npm run build

            # Prepare artifact (exclude unnecessary files)
            - mkdir -p tmp-build
            - rsync -av --exclude='.git' --exclude='node_modules' --exclude='tmp-build' --exclude='.env' ./ tmp-build/
            - tar -czf facility-management-build.tar.gz -C tmp-build .
            - rm -rf tmp-build

            # Upload to S3 with versioning
            - aws s3 cp facility-management-build.tar.gz "s3://$AWS_DEPLOYMENT_BUCKET/facility-management/facility-management-build-$(date +%Y%m%d%H%M%S).tar.gz" --acl bucket-owner-full-control
            - aws s3 cp facility-management-build.tar.gz "s3://$AWS_DEPLOYMENT_BUCKET/facility-management/latest.tar.gz" --acl bucket-owner-full-control

          artifacts:
            - facility-management-build.tar.gz

      - step:
          name: "Deploy to EC2 via SSM"
          deployment: prod
          script:
            # Install AWS CLI
            - apt-get update && apt-get install -y unzip curl
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            - aws --version

            # Run remote deploy with enhanced error handling
            - >
              aws ssm send-command
              --document-name "AWS-RunShellScript"
              --region "$AWS_REGION"
              --instance-ids "$EC2_INSTANCE_ID"
              --comment "Facility Management Deployment $(date +%Y-%m-%d)"
              --parameters '{
                "commands": [
                  "export PATH=$PATH:/usr/bin:/usr/local/bin",
                  "command -v pm2 >/dev/null || npm install -g pm2",
                  "sudo -u ubuntu pm2 stop /var/www/facility-management/ecosystem.config.cjs || true",
                  "sudo -u ubuntu pm2 delete /var/www/facility-management/ecosystem.config.cjs || true",
                  "rm -rf /var/www/facility-management/*",
                  "aws s3 cp s3://'"$AWS_DEPLOYMENT_BUCKET"'/facility-management/latest.tar.gz /tmp/build.tar.gz",
                  "mkdir -p /var/www/facility-management",
                  "chown -R ubuntu:ubuntu /var/www/facility-management || sudo chown -R ubuntu:ubuntu /var/www/facility-management",
                  "tar -xzf /tmp/build.tar.gz -C /var/www/facility-management",
                  "rm /tmp/build.tar.gz",
                  "cd /var/www/facility-management",
                  "npm ci --production",
                  "npm run build",
                  "sudo -u ubuntu pm2 start /var/www/facility-management/ecosystem.config.cjs",
                  "sudo -u ubuntu pm2 save --force",
                  "pm2 list"
                ],
                "workingDirectory": ["/var/www/facility-management"]
              }'
              --cloud-watch-output-config '{
                "CloudWatchLogGroupName": "/aws/ssm/facility-management-deployments",
                "CloudWatchOutputEnabled": true
              }'
              --output text

          # Post-deploy verification
          after-script:
            - echo "Deployment triggered. Check AWS SSM Run Command for execution logs."
